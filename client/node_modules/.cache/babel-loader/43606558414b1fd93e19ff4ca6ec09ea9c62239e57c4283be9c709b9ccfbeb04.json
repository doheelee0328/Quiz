{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { useDispatch } from 'react-redux';\nimport { nickname } from '../../slices/player';\nimport Logo from '../../components/Logo';\nimport MessageLogo from '../../images/send-message-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const initialState = {\n    message: '',\n    messages: []\n  };\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('update-nicknames', updatedNicknames => {\n      dispatch(nickname(updatedNicknames));\n    });\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message\n    }) => {\n      setMessages(prevMessages => [...prevMessages, {\n        nickname: senderNickname,\n        message\n      }]);\n    };\n    socket.on('receive-message', receiveMessageHandler);\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames');\n      socket.off('receive-message', receiveMessageHandler);\n    };\n  }, []);\n  const submitMessageHandler = () => {\n    if (!message) {\n      setErrorMessage('Please enter your message');\n      return;\n    }\n    socket.emit('send-message', message, selectedRoom);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"lobby-title\",\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lobby-waiting-sentence\",\n      children: \"Waiting the host to start the game....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-message-box\",\n        children: messages.map(({\n          nickname,\n          message\n        }, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chat-message\",\n          children: [nickname, \": \", message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-input-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setMessage(e.target.value),\n          value: message,\n          className: \"lobby-input\",\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MessageLogo,\n          alt: \"message-logo\",\n          className: \"message-logo\",\n          onClick: submitMessageHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lobby-message\",\n      children: errorMessage && errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"RhqpFiaGfzY1F35ZXKKg1Em4cmg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","useDispatch","nickname","Logo","MessageLogo","jsxDEV","_jsxDEV","Lobby","_s","initialState","message","messages","setMessage","errorMessage","setErrorMessage","setMessages","selectedRoom","state","playerSlice","gamingRoom","dispatch","on","updatedNicknames","receiveMessageHandler","senderNickname","prevMessages","off","submitMessageHandler","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onChange","e","target","value","placeholder","src","alt","onClick","title","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useReducer } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\nimport { useDispatch } from 'react-redux'\nimport { nickname } from '../../slices/player'\nimport Logo from '../../components/Logo'\nimport MessageLogo from '../../images/send-message-icon.png'\n\ntype LobbyState = {\n  message: string\n  messages: Array<string>\n}\n\nconst Lobby = () => {\n  const initialState: LobbyState = {\n    message: '',\n    messages: [],\n  }\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [messages, setMessages] = useState<\n    { nickname: string; message: string }[]\n  >([])\n\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    socket.on('update-nicknames', (updatedNicknames: string[]) => {\n      dispatch(nickname(updatedNicknames))\n    })\n\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message,\n    }: {\n      nickname: string\n      message: string\n    }) => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { nickname: senderNickname, message },\n      ])\n    }\n\n    socket.on('receive-message', receiveMessageHandler)\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames')\n      socket.off('receive-message', receiveMessageHandler)\n    }\n  }, [])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      setErrorMessage('Please enter your message')\n      return\n    }\n    socket.emit('send-message', message, selectedRoom)\n    setMessage('')\n  }\n\n  return (\n    <div className='lobby-container'>\n      <Logo />\n      <h1 className='lobby-title'>Lobby</h1>\n      <p className='lobby-waiting-sentence'>\n        Waiting the host to start the game....\n      </p>\n      <div className='logo-message-container'>\n        <div className='lobby-message-box'>\n          {messages.map(({ nickname, message }, index) => (\n            <p key={index} className='chat-message'>\n              {nickname}: {message}\n            </p>\n          ))}\n        </div>\n        <div className='lobby-input-message-container'>\n          <input\n            onChange={(e) => setMessage(e.target.value)}\n            value={message}\n            className='lobby-input'\n            placeholder='Enter your message'\n          />\n          <img\n            src={MessageLogo}\n            alt='message-logo'\n            className='message-logo'\n            onClick={submitMessageHandler}\n          />\n        </div>\n      </div>\n      <Button title='Start Game' />\n      <p className='lobby-message'>{errorMessage && errorMessage}</p>\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}