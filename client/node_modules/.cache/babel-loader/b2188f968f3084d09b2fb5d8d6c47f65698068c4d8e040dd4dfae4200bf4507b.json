{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/personal-projects/smart-duck-original/client/src/pages/questions/Questions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const selectedCategory = useSelector(state => state.questionSlice.selectedCategory);\n  const difficulty = useSelector(state => state.questionSlice.selectedDifficulty);\n  const fetchQuestions = async (retryCount = 3) => {\n    try {\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&category=${selectedCategory.id}&difficulty=${difficulty}&type=multiple`);\n      if (response.status === 429) {\n        const retryAfter = response.headers.get('Retry-After');\n        const delay = retryAfter ? parseInt(retryAfter) * 1000 : 1000; // Default to 1 second delay if no Retry-After header provided\n\n        setTimeout(() => {\n          fetchQuestions(retryCount - 1);\n        }, delay);\n        return;\n      }\n      const data = await response.json();\n      setQuestions(data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      if (retryCount > 0) {\n        setTimeout(() => {\n          fetchQuestions(retryCount - 1);\n        }, 1000); // Retry after 1 second\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchQuestions();\n    // what\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : questions && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", index + 1, \": \", question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: question.correct_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), question.incorrect_answers.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"SxuXS/F9aaGqHdcCqEpAZT2u+Zw=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","jsxDEV","_jsxDEV","Questions","_s","questions","setQuestions","loading","setLoading","selectedCategory","state","questionSlice","difficulty","selectedDifficulty","fetchQuestions","retryCount","response","fetch","id","status","retryAfter","headers","get","delay","parseInt","setTimeout","data","json","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","correct_answer","incorrect_answers","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/personal-projects/smart-duck-original/client/src/pages/questions/Questions.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Questions = () => {\n  const [questions, setQuestions] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const selectedCategory = useSelector(\n    (state: any) => state.questionSlice.selectedCategory\n  )\n  const difficulty = useSelector(\n    (state: any) => state.questionSlice.selectedDifficulty\n  )\n\n  const fetchQuestions = async (retryCount = 3) => {\n    try {\n      const response = await fetch(\n        `https://opentdb.com/api.php?amount=5&category=${selectedCategory.id}&difficulty=${difficulty}&type=multiple`\n      )\n\n      if (response.status === 429) {\n        const retryAfter = response.headers.get('Retry-After')\n        const delay = retryAfter ? parseInt(retryAfter) * 1000 : 1000 // Default to 1 second delay if no Retry-After header provided\n\n        setTimeout(() => {\n          fetchQuestions(retryCount - 1)\n        }, delay)\n\n        return\n      }\n\n      const data = await response.json()\n      setQuestions(data.results)\n      setLoading(false)\n    } catch (error) {\n      console.error(error)\n      if (retryCount > 0) {\n        setTimeout(() => {\n          fetchQuestions(retryCount - 1)\n        }, 1000) // Retry after 1 second\n      }\n    }\n  }\n\n  useEffect(() => {\n    fetchQuestions()\n    // what\n  }, [])\n\n  return (\n    <div>\n      <h2>Questions</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        questions &&\n        questions.length > 0 && (\n          <div>\n            {questions.map((question: any, index: number) => (\n              <div key={index}>\n                <p>\n                  Question {index + 1}: {question.question}\n                </p>\n                <ul>\n                  <li>{question.correct_answer}</li>\n                  {question.incorrect_answers.map(\n                    (question: any, index: number) => (\n                      <li key={index}>{question}</li>\n                    )\n                  )}\n                </ul>\n              </div>\n            ))}\n          </div>\n        )\n      )}\n    </div>\n  )\n}\n\nexport default Questions\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}