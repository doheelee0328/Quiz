{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCharacter } from '../../slices/character';\nimport { gamingRoom, nickname } from '../../slices/player';\nimport '../../scss/main.scss';\nimport Button from '../../components/Buttons';\nimport { useNavigate } from 'react-router-dom';\nimport { socket } from '../../socket/index';\n\n// this the socket client version\n\n// use redux to use the nickname and room\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const inputNicknameRef = useRef(null);\n  const inputRoomRef = useRef(null);\n  // const [room, setRoom] = useState('') // redux\n  // const [nickName, setNickname] = useState('') // redux\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const selectedCharacter = useSelector(state => state.characterSlice.character);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const selectedNickname = useSelector(state => state.playerSlice.nickname);\n  const navigate = useNavigate();\n\n  // socket.on('connect', () => {\n  //   setMessage(`You connected with the id, ${socket.id}`)\n  // })\n\n  // socket.on('join-room', (name) => {\n  //   setMessage(`You have joined the room ${name}`)\n  // })\n  // listens the event and displays the message\n\n  // how to send from the client to the server\n  // socket.emit('custom event', 10, 'hi', { a: 1 })\n\n  const joinRoomHandler = () => {\n    if (!selectedNickname || !selectedRoom) {\n      setMessage('Please enter your nickname and the existing room to join the game');\n      return;\n    }\n    socket.emit('join-room', selectedRoom, selectedNickname, roomExist => {\n      if (roomExist) {\n        navigate('/lobby');\n      } else {\n        setMessage('The room does not exist');\n      }\n    });\n    dispatch(gamingRoom(''));\n    dispatch(nickname(''));\n  };\n  const joinNewGameHandler = () => {\n    if (!selectedNickname || !selectedRoom) {\n      setMessage('Please enter your username and room to create a quiz');\n      return;\n    } else {\n      socket.emit('create-room', selectedRoom, selectedNickname, room => {\n        setMessage(`Room ${room} has been created`);\n        dispatch(gamingRoom(room));\n        dispatch(gamingRoom(''));\n      });\n    }\n    dispatch(gamingRoom(''));\n    dispatch(nickname(''));\n  };\n  useEffect(() => {\n    if (inputNicknameRef.current) {\n      inputNicknameRef.current.focus();\n    }\n    if (inputRoomRef.current) {\n      inputRoomRef.current.focus();\n    }\n    const storedCharacter = localStorage.getItem('character-image');\n    if (storedCharacter) {\n      dispatch(changeCharacter(storedCharacter));\n    }\n  }, [dispatch, selectedCharacter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [selectedCharacter && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedCharacter,\n      alt: \"selected-character\",\n      className: \"selected-character\",\n      \"data-cy\": \"selected-character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nickname\",\n      \"data-cy\": \"nickname\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputNicknameRef,\n      className: \"input\",\n      \"data-cy\": \"input\",\n      onChange: e => dispatch(nickname(e.target.value)),\n      value: selectedNickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nickname\",\n      \"data-cy\": \"nickname\",\n      children: \"Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRoomRef,\n      className: \"input\",\n      \"data-cy\": \"input\",\n      onChange: e => dispatch(gamingRoom(e.target.value)),\n      value: selectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create Room\",\n        onClick: joinNewGameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Join Game\",\n        onClick: joinRoomHandler,\n        dataCy: \"join-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-entered-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"2abgnSz2djAxorklDdeuXhWIUz0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","changeCharacter","gamingRoom","nickname","Button","useNavigate","socket","jsxDEV","_jsxDEV","Login","_s","inputNicknameRef","inputRoomRef","message","setMessage","dispatch","selectedCharacter","state","characterSlice","character","selectedRoom","playerSlice","selectedNickname","navigate","joinRoomHandler","emit","roomExist","joinNewGameHandler","room","current","focus","storedCharacter","localStorage","getItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","e","target","value","title","onClick","dataCy","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changeCharacter } from '../../slices/character'\nimport { gamingRoom, nickname } from '../../slices/player'\nimport '../../scss/main.scss'\nimport Button from '../../components/Buttons'\nimport { useNavigate } from 'react-router-dom'\nimport { socket } from '../../socket/index'\n\n// this the socket client version\n\n// use redux to use the nickname and room\nconst Login = () => {\n  const inputNicknameRef = useRef<HTMLInputElement>(null)\n  const inputRoomRef = useRef<HTMLInputElement>(null)\n  // const [room, setRoom] = useState('') // redux\n  // const [nickName, setNickname] = useState('') // redux\n  const [message, setMessage] = useState('')\n  const dispatch = useDispatch()\n  const selectedCharacter = useSelector(\n    (state: any) => state.characterSlice.character\n  )\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const selectedNickname = useSelector(\n    (state: any) => state.playerSlice.nickname\n  )\n  const navigate = useNavigate()\n\n  // socket.on('connect', () => {\n  //   setMessage(`You connected with the id, ${socket.id}`)\n  // })\n\n  // socket.on('join-room', (name) => {\n  //   setMessage(`You have joined the room ${name}`)\n  // })\n  // listens the event and displays the message\n\n  // how to send from the client to the server\n  // socket.emit('custom event', 10, 'hi', { a: 1 })\n\n  const joinRoomHandler = () => {\n    if (!selectedNickname || !selectedRoom) {\n      setMessage(\n        'Please enter your nickname and the existing room to join the game'\n      )\n      return\n    }\n\n    socket.emit(\n      'join-room',\n      selectedRoom,\n      selectedNickname,\n      (roomExist: boolean) => {\n        if (roomExist) {\n          navigate('/lobby')\n        } else {\n          setMessage('The room does not exist')\n        }\n      }\n    )\n    dispatch(gamingRoom(''))\n    dispatch(nickname(''))\n  }\n  const joinNewGameHandler = () => {\n    if (!selectedNickname || !selectedRoom) {\n      setMessage('Please enter your username and room to create a quiz')\n      return\n    } else {\n      socket.emit(\n        'create-room',\n        selectedRoom,\n        selectedNickname,\n        (room: string) => {\n          setMessage(`Room ${room} has been created`)\n          dispatch(gamingRoom(room))\n          dispatch(gamingRoom(''))\n        }\n      )\n    }\n    dispatch(gamingRoom(''))\n    dispatch(nickname(''))\n  }\n  useEffect(() => {\n    if (inputNicknameRef.current) {\n      inputNicknameRef.current.focus()\n    }\n    if (inputRoomRef.current) {\n      inputRoomRef.current.focus()\n    }\n    const storedCharacter = localStorage.getItem('character-image')\n    if (storedCharacter) {\n      dispatch(changeCharacter(storedCharacter))\n    }\n  }, [dispatch, selectedCharacter])\n\n  return (\n    <div className='login-container'>\n      {selectedCharacter && (\n        <img\n          src={selectedCharacter}\n          alt='selected-character'\n          className='selected-character'\n          data-cy='selected-character'\n        />\n      )}\n      <p className='nickname' data-cy='nickname'>\n        Username\n      </p>\n      <input\n        type='text'\n        ref={inputNicknameRef}\n        className='input'\n        data-cy='input'\n        onChange={(e) => dispatch(nickname(e.target.value))}\n        value={selectedNickname}\n      />\n      <p className='nickname' data-cy='nickname'>\n        Room\n      </p>\n      <input\n        type='text'\n        ref={inputRoomRef}\n        className='input'\n        data-cy='input'\n        onChange={(e) => dispatch(gamingRoom(e.target.value))}\n        value={selectedRoom}\n      />\n\n      <div className='start-game-container'>\n        <Button title='Create Room' onClick={joinNewGameHandler} />\n        <Button\n          title='Join Game'\n          onClick={joinRoomHandler}\n          dataCy='join-button'\n        />\n      </div>\n\n      {message && <p className='not-entered-message'>{message}</p>}\n    </div>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}