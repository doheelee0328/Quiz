{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { useDispatch } from 'react-redux';\nimport { nickname } from '../../slices/player';\nimport Logo from '../../components/Logo';\nimport MessageLogo from '../../images/send-message-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const initialState = {\n    message: '',\n    messages: []\n  };\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const selectedNickname = useSelector(state => state.playerSlice.nickname);\n  const selectedCharacter = useSelector(state => state.characterSlice.character);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('update-nicknames', updatedNicknames => {\n      dispatch(nickname(updatedNicknames));\n    });\n    socket.on('previous-messages', previousMessages => {\n      setMessages(previousMessages);\n    });\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message,\n      character\n    }) => {\n      setMessages(prevMessages => [...prevMessages, {\n        nickname: senderNickname,\n        message,\n        character\n      }]);\n    };\n    socket.on('receive-message', receiveMessageHandler);\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames');\n      socket.off('receive-message', receiveMessageHandler);\n    };\n  }, []);\n  const submitMessageHandler = () => {\n    if (!message) {\n      setErrorMessage('Please enter your message');\n      return;\n    }\n    socket.emit('send-message', message, selectedRoom, selectedCharacter);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"lobby-title\",\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lobby-waiting-sentence\",\n      children: \"Waiting for the host to start the game....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-message-box\",\n        children: messages.map(({\n          nickname,\n          message,\n          character\n        }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-message-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: character,\n              alt: \"chosen-character-images\",\n              className: \"character-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-message\",\n              children: [nickname, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-message\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-input-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setMessage(e.target.value),\n          value: message,\n          className: \"lobby-input\",\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MessageLogo,\n          alt: \"message-logo\",\n          className: \"message-logo\",\n          onClick: submitMessageHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nicknames-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Players in Lobby:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedNickname.map((nickname, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              margin: '1em'\n            },\n            children: nickname\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Start The Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lobby-message\",\n      children: errorMessage && errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"iux3G9fsGi2N3QOyd7gofXDPoHw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","useDispatch","nickname","Logo","MessageLogo","jsxDEV","_jsxDEV","Lobby","_s","initialState","message","messages","setMessage","errorMessage","setErrorMessage","setMessages","selectedRoom","state","playerSlice","gamingRoom","selectedNickname","selectedCharacter","characterSlice","character","dispatch","on","updatedNicknames","previousMessages","receiveMessageHandler","senderNickname","prevMessages","off","submitMessageHandler","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","alt","onChange","e","target","value","placeholder","onClick","style","margin","title","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useReducer } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\nimport { useDispatch } from 'react-redux'\nimport { nickname } from '../../slices/player'\nimport Logo from '../../components/Logo'\nimport MessageLogo from '../../images/send-message-icon.png'\n\ntype LobbyState = {\n  message: string\n  messages: Array<string>\n}\n\nconst Lobby = () => {\n  const initialState: LobbyState = {\n    message: '',\n    messages: [],\n  }\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [messages, setMessages] = useState<\n    { nickname: string; message: string; character: string }[]\n  >([])\n\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const selectedNickname = useSelector(\n    (state: any) => state.playerSlice.nickname\n  )\n  const selectedCharacter = useSelector(\n    (state: any) => state.characterSlice.character\n  )\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    socket.on('update-nicknames', (updatedNicknames: string[]) => {\n      dispatch(nickname(updatedNicknames))\n    })\n\n    socket.on('previous-messages', (previousMessages) => {\n      setMessages(previousMessages)\n    })\n\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message,\n      character,\n    }: {\n      nickname: string\n      message: string\n      character: string\n    }) => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { nickname: senderNickname, message, character },\n      ])\n    }\n\n    socket.on('receive-message', receiveMessageHandler)\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames')\n      socket.off('receive-message', receiveMessageHandler)\n    }\n  }, [])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      setErrorMessage('Please enter your message')\n      return\n    }\n    socket.emit('send-message', message, selectedRoom, selectedCharacter)\n    setMessage('')\n  }\n\n  return (\n    <div className='lobby-container'>\n      <Logo />\n      <h1 className='lobby-title'>Lobby</h1>\n      <p className='lobby-waiting-sentence'>\n        Waiting for the host to start the game....\n      </p>\n      <div className='logo-message-container'>\n        <div className='lobby-message-box'>\n          {messages.map(({ nickname, message, character }, index) => (\n            <div key={index}>\n              <div className='character-message-container'>\n                <img\n                  src={character}\n                  alt='chosen-character-images'\n                  className='character-image'\n                />\n\n                <span className='chat-message'>{nickname}:</span>\n                <span className='chat-message'>{message}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className='lobby-input-message-container'>\n          <input\n            onChange={(e) => setMessage(e.target.value)}\n            value={message}\n            className='lobby-input'\n            placeholder='Enter your message'\n          />\n          <img\n            src={MessageLogo}\n            alt='message-logo'\n            className='message-logo'\n            onClick={submitMessageHandler}\n          />\n        </div>\n        <div className='nicknames-list'>\n          <h2>Players in Lobby:</h2>\n          <ul>\n            {selectedNickname.map((nickname: Array<string>, index: number) => (\n              <li key={index} style={{ margin: '1em' }}>\n                {nickname}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <Button title='Start The Quiz' />\n      <p className='lobby-message'>{errorMessage && errorMessage}</p>\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}