{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { useDispatch } from 'react-redux';\nimport { nickname } from '../../slices/player';\nimport Logo from '../../components/Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('update-nicknames', updatedNicknames => {\n      dispatch(nickname(updatedNicknames));\n    });\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message\n    }) => {\n      setMessages(prevMessages => [...prevMessages, {\n        nickname: senderNickname,\n        message\n      }]);\n    };\n    socket.on('receive-message', receiveMessageHandler);\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames');\n      socket.off('receive-message', receiveMessageHandler);\n    };\n  }, []);\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message');\n      return;\n    }\n    socket.emit('send-message', message, selectedRoom);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-message-container\",\n      children: messages.map(({\n        nickname,\n        message\n      }, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '4rem',\n          color: 'white'\n        },\n        children: [nickname, \": \", message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Send Message\",\n      onClick: submitMessageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"T3GHHSnj4qoVc1lHgucnXMArhSw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","useDispatch","nickname","Logo","jsxDEV","_jsxDEV","Lobby","_s","message","setMessage","messages","setMessages","selectedRoom","state","playerSlice","gamingRoom","dispatch","on","updatedNicknames","receiveMessageHandler","senderNickname","prevMessages","off","submitMessageHandler","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","fontSize","color","onChange","e","target","value","title","onClick","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\nimport { useDispatch } from 'react-redux'\nimport { nickname } from '../../slices/player'\nimport Logo from '../../components/Logo'\n\nconst Lobby = () => {\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState<\n    { nickname: string; message: string }[]\n  >([])\n\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    socket.on('update-nicknames', (updatedNicknames: string[]) => {\n      dispatch(nickname(updatedNicknames))\n    })\n\n    const receiveMessageHandler = ({\n      nickname: senderNickname,\n      message,\n    }: {\n      nickname: string\n      message: string\n    }) => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { nickname: senderNickname, message },\n      ])\n    }\n\n    socket.on('receive-message', receiveMessageHandler)\n\n    // Cleanup function repeated messages\n    return () => {\n      socket.off('update-nicknames')\n      socket.off('receive-message', receiveMessageHandler)\n    }\n  }, [])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message')\n      return\n    }\n    socket.emit('send-message', message, selectedRoom)\n    setMessage('')\n  }\n\n  return (\n    <div className='lobby-container'>\n      <Logo />\n      <h1>Lobby</h1>\n      <div className='lobby-message-container'>\n        {messages.map(({ nickname, message }, index) => (\n          <p key={index} style={{ fontSize: '4rem', color: 'white' }}>\n            {nickname}: {message}\n          </p>\n        ))}\n      </div>\n      <input onChange={(e) => setMessage(e.target.value)} value={message} />\n      <Button title='Send Message' onClick={submitMessageHandler} />\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}