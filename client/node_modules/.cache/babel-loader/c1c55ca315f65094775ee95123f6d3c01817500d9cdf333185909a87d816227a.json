{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCharacter } from '../../slices/character';\nimport '../../scss/main.scss';\nimport Button from '../../components/Buttons';\nimport { useNavigate } from 'react-router-dom';\nimport { socket } from '../../socket/index';\n// this the socket client version\n\n// use redux to use the nickname and room\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const inputRef = useRef(null);\n  const [room, setRoom] = useState(''); // redux\n  const [nickName, setNickname] = useState(''); // redux\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const selectedCharacter = useSelector(state => state.characterSlice.character);\n  const navigate = useNavigate();\n  const navigateToTheCharacterPage = () => navigate('/character');\n\n  // socket.on('connect', () => {\n  //   setMessage(`You connected with the id, ${socket.id}`)\n  // })\n\n  // socket.on('join-room', (name) => {\n  //   setMessage(`You have joined the room ${name}`)\n  // })\n  // listens the event and displays the message\n\n  // how to send from the client to the server\n  // socket.emit('custom event', 10, 'hi', { a: 1 })\n\n  const joinRoomHandler = () => {\n    if (!nickName && !room) {\n      setMessage('Please enter your nickname and the existing room to join the game');\n      return;\n    } else {\n      socket.emit('join-room', nickName, room);\n      navigate('/lobby');\n      // once they are in the same lobby, they can send messages to each other\n    }\n\n    setRoom('');\n    setNickname('');\n  };\n  const joinNewGameHandler = () => {\n    if (!nickName && !room) {\n      setMessage('Please enter your username and room to create a quiz');\n      return;\n    } else {\n      navigate('/game-room');\n      // where the game is set up\n    }\n\n    setNickname('');\n    setRoom('');\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    const storedCharacter = localStorage.getItem('character-image');\n    if (storedCharacter) {\n      dispatch(changeCharacter(storedCharacter));\n    }\n  }, [dispatch, selectedCharacter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [selectedCharacter && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedCharacter,\n      alt: \"selected-character\",\n      className: \"selected-character\",\n      \"data-cy\": \"selected-character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nickname\",\n      \"data-cy\": \"nickname\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      className: \"input\",\n      \"data-cy\": \"input\",\n      onChange: e => setNickname(e.target.value),\n      value: nickName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nickname\",\n      \"data-cy\": \"nickname\",\n      children: \"Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      className: \"input\",\n      \"data-cy\": \"input\",\n      onChange: e => setRoom(e.target.value),\n      value: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create Room \",\n        onClick: joinNewGameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Join Game\",\n        onClick: joinRoomHandler,\n        dataCy: \"join-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-enter-name\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Back\",\n        onClick: navigateToTheCharacterPage,\n        dataCy: \"back-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"1TrACM+vUVVwn9hxSEXOHHm3TL8=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","changeCharacter","Button","useNavigate","socket","jsxDEV","_jsxDEV","Login","_s","inputRef","room","setRoom","nickName","setNickname","message","setMessage","dispatch","selectedCharacter","state","characterSlice","character","navigate","navigateToTheCharacterPage","joinRoomHandler","emit","joinNewGameHandler","current","focus","storedCharacter","localStorage","getItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","e","target","value","title","onClick","dataCy","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changeCharacter } from '../../slices/character'\nimport '../../scss/main.scss'\nimport Button from '../../components/Buttons'\nimport { useNavigate } from 'react-router-dom'\nimport { socket } from '../../socket/index'\n// this the socket client version\n\n// use redux to use the nickname and room\nconst Login = () => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [room, setRoom] = useState('') // redux\n  const [nickName, setNickname] = useState('') // redux\n  const [message, setMessage] = useState('')\n  const dispatch = useDispatch()\n  const selectedCharacter = useSelector(\n    (state: any) => state.characterSlice.character\n  )\n  const navigate = useNavigate()\n\n  const navigateToTheCharacterPage = () => navigate('/character')\n\n  // socket.on('connect', () => {\n  //   setMessage(`You connected with the id, ${socket.id}`)\n  // })\n\n  // socket.on('join-room', (name) => {\n  //   setMessage(`You have joined the room ${name}`)\n  // })\n  // listens the event and displays the message\n\n  // how to send from the client to the server\n  // socket.emit('custom event', 10, 'hi', { a: 1 })\n\n  const joinRoomHandler = () => {\n    if (!nickName && !room) {\n      setMessage(\n        'Please enter your nickname and the existing room to join the game'\n      )\n      return\n    } else {\n      socket.emit('join-room', nickName, room)\n      navigate('/lobby')\n      // once they are in the same lobby, they can send messages to each other\n    }\n    setRoom('')\n    setNickname('')\n  }\n\n  const joinNewGameHandler = () => {\n    if (!nickName && !room) {\n      setMessage('Please enter your username and room to create a quiz')\n      return\n    } else {\n      navigate('/game-room')\n      // where the game is set up\n    }\n    setNickname('')\n    setRoom('')\n  }\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus()\n    }\n    const storedCharacter = localStorage.getItem('character-image')\n    if (storedCharacter) {\n      dispatch(changeCharacter(storedCharacter))\n    }\n  }, [dispatch, selectedCharacter])\n\n  return (\n    <div className='login-container'>\n      {selectedCharacter && (\n        <img\n          src={selectedCharacter}\n          alt='selected-character'\n          className='selected-character'\n          data-cy='selected-character'\n        />\n      )}\n      <p className='nickname' data-cy='nickname'>\n        Username\n      </p>\n      <input\n        type='text'\n        ref={inputRef}\n        className='input'\n        data-cy='input'\n        onChange={(e) => setNickname(e.target.value)}\n        value={nickName}\n      />\n      <p className='nickname' data-cy='nickname'>\n        Room\n      </p>\n      <input\n        type='text'\n        ref={inputRef}\n        className='input'\n        data-cy='input'\n        onChange={(e) => setRoom(e.target.value)}\n        value={room}\n      />\n\n      <div className='start-game-container'>\n        <Button title='Create Room ' onClick={joinNewGameHandler} />\n        <Button\n          title='Join Game'\n          onClick={joinRoomHandler}\n          dataCy='join-button'\n        />\n      </div>\n\n      {message && <p className='not-enter-name'>{message}</p>}\n      <div className='button-container'>\n        <Button\n          title='Back'\n          onClick={navigateToTheCharacterPage}\n          dataCy='back-button'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,wBAAwB;AACxD,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,oBAAoB;AAC3C;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGb,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,EAAC;EACrC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC7C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,iBAAiB,GAAGlB,WAAW,CAClCmB,KAAU,IAAKA,KAAK,CAACC,cAAc,CAACC,SACvC,CAAC;EACD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,0BAA0B,GAAGA,CAAA,KAAMD,QAAQ,CAAC,YAAY,CAAC;;EAE/D;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACX,QAAQ,IAAI,CAACF,IAAI,EAAE;MACtBK,UAAU,CACR,mEACF,CAAC;MACD;IACF,CAAC,MAAM;MACLX,MAAM,CAACoB,IAAI,CAAC,WAAW,EAAEZ,QAAQ,EAAEF,IAAI,CAAC;MACxCW,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IACAV,OAAO,CAAC,EAAE,CAAC;IACXE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACb,QAAQ,IAAI,CAACF,IAAI,EAAE;MACtBK,UAAU,CAAC,sDAAsD,CAAC;MAClE;IACF,CAAC,MAAM;MACLM,QAAQ,CAAC,YAAY,CAAC;MACtB;IACF;;IACAR,WAAW,CAAC,EAAE,CAAC;IACfF,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACiB,OAAO,EAAE;MACpBjB,QAAQ,CAACiB,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;IACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/D,IAAIF,eAAe,EAAE;MACnBZ,QAAQ,CAACf,eAAe,CAAC2B,eAAe,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACZ,QAAQ,EAAEC,iBAAiB,CAAC,CAAC;EAEjC,oBACEX,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC7Bf,iBAAiB,iBAChBX,OAAA;MACE2B,GAAG,EAAEhB,iBAAkB;MACvBiB,GAAG,EAAC,oBAAoB;MACxBH,SAAS,EAAC,oBAAoB;MAC9B,WAAQ;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACF,eACDhC,OAAA;MAAGyB,SAAS,EAAC,UAAU;MAAC,WAAQ,UAAU;MAAAC,QAAA,EAAC;IAE3C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJhC,OAAA;MACEiC,IAAI,EAAC,MAAM;MACXC,GAAG,EAAE/B,QAAS;MACdsB,SAAS,EAAC,OAAO;MACjB,WAAQ,OAAO;MACfU,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC7CA,KAAK,EAAEhC;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACFhC,OAAA;MAAGyB,SAAS,EAAC,UAAU;MAAC,WAAQ,UAAU;MAAAC,QAAA,EAAC;IAE3C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJhC,OAAA;MACEiC,IAAI,EAAC,MAAM;MACXC,GAAG,EAAE/B,QAAS;MACdsB,SAAS,EAAC,OAAO;MACjB,WAAQ,OAAO;MACfU,QAAQ,EAAGC,CAAC,IAAK/B,OAAO,CAAC+B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACzCA,KAAK,EAAElC;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAEFhC,OAAA;MAAKyB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC1B,OAAA,CAACJ,MAAM;QAAC2C,KAAK,EAAC,cAAc;QAACC,OAAO,EAAErB;MAAmB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DhC,OAAA,CAACJ,MAAM;QACL2C,KAAK,EAAC,WAAW;QACjBC,OAAO,EAAEvB,eAAgB;QACzBwB,MAAM,EAAC;MAAa;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELxB,OAAO,iBAAIR,OAAA;MAAGyB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAElB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDhC,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B1B,OAAA,CAACJ,MAAM;QACL2C,KAAK,EAAC,MAAM;QACZC,OAAO,EAAExB,0BAA2B;QACpCyB,MAAM,EAAC;MAAa;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA9B,EAAA,CAlHKD,KAAK;EAAA,QAKQP,WAAW,EACFD,WAAW,EAGpBI,WAAW;AAAA;AAAA6C,EAAA,GATxBzC,KAAK;AAoHX,eAAeA,KAAK;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}