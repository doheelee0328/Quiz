{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/character/Character.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../scss/main.scss';\nimport Duck1 from '../../images/duck1.png';\nimport { useNavigate } from 'react-router-dom';\nimport { changeCharacter } from '../../slices/character';\nimport { useDispatch } from 'react-redux';\nimport Button from '../../components/Buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterImages = ({\n  image,\n  alt,\n  selectedImage,\n  dataCy\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectCharacterHandler = selectedCharacter => {\n    if (selectedCharacter) {\n      dispatch(changeCharacter(selectedCharacter));\n      localStorage.setItem('character-image', selectedCharacter);\n      selectedImage('Your character has been chosen');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: alt,\n      className: \"duck-image\",\n      onClick: () => selectCharacterHandler(image),\n      \"data-cy\": dataCy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterImages, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = CharacterImages;\nconst Character = () => {\n  _s2();\n  const [state, setState] = useState({\n    selectedImageMessage: '',\n    errorMessage: false\n  });\n  const navigate = useNavigate();\n  const navigateToLoginPage = () => {\n    if (state.selectedImageMessage === 'Your character has been chosen') {\n      navigate('/login');\n    } else {\n      setState(prev => ({\n        ...prev,\n        selectedImageMessage: 'Please select your character'\n      }));\n    }\n  };\n  const navigateToHomepage = () => navigate('/');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"character-heading\",\n      \"data-cy\": \"character-heading\",\n      children: \"Choose Your Duck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterImages, {\n      image: Duck1,\n      alt: \"duck1\",\n      selectedImage: setState,\n      dataCy: \"duck-image1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), state.selectedImageMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"character-chosen-message\",\n      \"data-cy\": \"character-error-message\",\n      children: state.selectedImageMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Back\",\n        onClick: navigateToHomepage,\n        dataCy: \"back-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Next\",\n        onClick: navigateToLoginPage,\n        dataCy: \"next-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(Character, \"rwu+s6Ot1y7abYqYQ4axXm7V3GU=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Character;\nexport default Character;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharacterImages\");\n$RefreshReg$(_c2, \"Character\");","map":{"version":3,"names":["React","useState","Duck1","useNavigate","changeCharacter","useDispatch","Button","jsxDEV","_jsxDEV","CharacterImages","image","alt","selectedImage","dataCy","_s","dispatch","selectCharacterHandler","selectedCharacter","localStorage","setItem","className","children","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Character","_s2","state","setState","selectedImageMessage","errorMessage","navigate","navigateToLoginPage","prev","navigateToHomepage","title","_c2","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/character/Character.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../../scss/main.scss'\nimport Duck1 from '../../images/duck1.png'\nimport { useNavigate } from 'react-router-dom'\nimport { changeCharacter } from '../../slices/character'\nimport { useDispatch } from 'react-redux'\nimport Button from '../../components/Buttons'\n\ninterface CharacterProps {\n  image: any\n  alt: string\n  selectedImage: any\n  dataCy?: string\n  errorMessage?: () => void\n}\ninterface CharacterState {\n  selectedImageMessage: string\n  errorMessage: boolean\n}\n\nconst CharacterImages = ({\n  image,\n  alt,\n  selectedImage,\n  dataCy,\n}: // errorMessage,\nCharacterProps) => {\n  const dispatch = useDispatch()\n\n  const selectCharacterHandler = (selectedCharacter: any) => {\n    if (selectedCharacter) {\n      dispatch(changeCharacter(selectedCharacter))\n      localStorage.setItem('character-image', selectedCharacter)\n      selectedImage('Your character has been chosen')\n    }\n  }\n\n  return (\n    <div className='image-container'>\n      <img\n        src={image}\n        alt={alt}\n        className='duck-image'\n        onClick={() => selectCharacterHandler(image)}\n        data-cy={dataCy}\n      />\n    </div>\n  )\n}\n\nconst Character = () => {\n  const [state, setState] = useState<CharacterState>({\n    selectedImageMessage: '',\n    errorMessage: false,\n  })\n\n  const navigate = useNavigate()\n  const navigateToLoginPage = () => {\n    if (state.selectedImageMessage === 'Your character has been chosen') {\n      navigate('/login')\n    } else {\n      setState((prev) => ({\n        ...prev,\n        selectedImageMessage: 'Please select your character',\n      }))\n    }\n  }\n  const navigateToHomepage = () => navigate('/')\n\n  return (\n    <div className='character-container'>\n      <h1 className='character-heading' data-cy='character-heading'>\n        Choose Your Duck\n      </h1>\n      <CharacterImages\n        image={Duck1}\n        alt='duck1'\n        selectedImage={setState}\n        dataCy='duck-image1'\n      />\n      {state.selectedImageMessage && (\n        <p\n          className='character-chosen-message'\n          data-cy='character-error-message'\n        >\n          {state.selectedImageMessage}\n        </p>\n      )}\n\n      <div className='button-container'>\n        <Button\n          title='Back'\n          onClick={navigateToHomepage}\n          dataCy='back-button'\n        />\n        <Button\n          title='Next'\n          onClick={navigateToLoginPage}\n          dataCy='next-button'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}