{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { useDispatch } from 'react-redux';\nimport { nickname } from '../../slices/player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const selectedNickname = useSelector(state => state.playerSlice.nickname);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('update-nicknames', updatedNicknames => {\n      dispatch(nickname(updatedNicknames));\n    });\n    socket.on('receive-message', newMessages => {\n      setMessages(newMessages);\n      console.log('New message received:', newMessages); // Check if the new message is received correctly\n    });\n  }, [dispatch, selectedRoom]);\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message');\n      return;\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom);\n    }\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedNickname.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '4rem'\n          },\n          children: selectedNickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Send Message\",\n      onClick: submitMessageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"nXRiIc/wjpeKF4fwrA0idGbLhIM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","useDispatch","nickname","jsxDEV","_jsxDEV","Lobby","_s","message","setMessage","messages","setMessages","selectedNickname","state","playerSlice","selectedRoom","gamingRoom","dispatch","on","updatedNicknames","newMessages","console","log","submitMessageHandler","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","style","fontSize","map","index","color","onChange","e","target","value","title","onClick","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\nimport { useDispatch } from 'react-redux'\nimport { nickname } from '../../slices/player'\n\nconst Lobby = () => {\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState<string[]>([])\n\n  const selectedNickname = useSelector(\n    (state: any) => state.playerSlice.nickname\n  )\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    socket.on('update-nicknames', (updatedNicknames: string[]) => {\n      dispatch(nickname(updatedNicknames))\n    })\n    socket.on('receive-message', (newMessages: string[]) => {\n      setMessages(newMessages)\n      console.log('New message received:', newMessages) // Check if the new message is received correctly\n    })\n  }, [dispatch, selectedRoom])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message')\n      return\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom)\n    }\n    setMessage('')\n  }\n\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <div className='lobby-container'>\n        <div>\n          {selectedNickname.length > 0 && (\n            <p style={{ fontSize: '4rem' }}>{selectedNickname}</p>\n          )}\n\n          {messages.map((message, index) => (\n            <p key={index} style={{ color: 'white' }}>\n              {message}\n            </p>\n          ))}\n        </div>\n      </div>\n      <input onChange={(e) => setMessage(e.target.value)} value={message} />\n      <Button title='Send Message' onClick={submitMessageHandler} />\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}