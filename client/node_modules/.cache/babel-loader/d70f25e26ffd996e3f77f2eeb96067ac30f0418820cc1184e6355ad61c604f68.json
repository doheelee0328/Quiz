{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/character/Character.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../scss/main.scss';\nimport Duck1 from '../../images/duck1.png';\nimport { useNavigate } from 'react-router-dom';\nimport { changeCharacter } from '../../slices/character';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterImages = ({\n  image,\n  alt,\n  selectedImage\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectCharacterHandler = selectedCharacter => {\n    if (selectedCharacter) {\n      dispatch(changeCharacter(selectedCharacter));\n      localStorage.setItem('character-image', selectedCharacter);\n      selectedImage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: alt,\n      className: \"duck-image\",\n      onClick: () => selectCharacterHandler(image)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterImages, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = CharacterImages;\nconst Character = () => {\n  _s2();\n  const [selectedImageMessage, setSelectedImageMessage] = useState(false);\n  const navigate = useNavigate();\n  const navigateToLoginPage = () => navigate('/login');\n  const navigateToHomepage = () => navigate('/');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"character-heading\",\n      children: \"Choose Your Duck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterImages, {\n      image: Duck1,\n      alt: \"duck1\",\n      selectedImage: () => setSelectedImageMessage(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedImageMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"image-message\",\n      children: \"Your character has been chosen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateToHomepage,\n        className: \"character-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateToLoginPage,\n        className: \"character-button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(Character, \"Ndc33WRy/BEKF5OYgvrdIAPy1vE=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Character;\nexport default Character;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharacterImages\");\n$RefreshReg$(_c2, \"Character\");","map":{"version":3,"names":["React","useState","Duck1","useNavigate","changeCharacter","useDispatch","jsxDEV","_jsxDEV","CharacterImages","image","alt","selectedImage","_s","dispatch","selectCharacterHandler","selectedCharacter","localStorage","setItem","className","children","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Character","_s2","selectedImageMessage","setSelectedImageMessage","navigate","navigateToLoginPage","navigateToHomepage","_c2","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/character/Character.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../../scss/main.scss'\nimport Duck1 from '../../images/duck1.png'\nimport { useNavigate } from 'react-router-dom'\nimport { changeCharacter } from '../../slices/character'\nimport { useDispatch } from 'react-redux'\n\ninterface CharacterProps {\n  image: any\n  alt: string\n  selectedImage: () => void\n}\n\nconst CharacterImages = ({ image, alt, selectedImage }: CharacterProps) => {\n  const dispatch = useDispatch()\n\n  const selectCharacterHandler = (selectedCharacter: any) => {\n    if (selectedCharacter) {\n      dispatch(changeCharacter(selectedCharacter))\n      localStorage.setItem('character-image', selectedCharacter)\n      selectedImage()\n    }\n  }\n\n  return (\n    <div className='image-container'>\n      <img\n        src={image}\n        alt={alt}\n        className='duck-image'\n        onClick={() => selectCharacterHandler(image)}\n      />\n    </div>\n  )\n}\n\nconst Character = () => {\n  const [selectedImageMessage, setSelectedImageMessage] = useState(false)\n\n  const navigate = useNavigate()\n  const navigateToLoginPage = () => navigate('/login')\n  const navigateToHomepage = () => navigate('/')\n  return (\n    <div className='character-container'>\n      <h1 className='character-heading'>Choose Your Duck</h1>\n      <CharacterImages\n        image={Duck1}\n        alt='duck1'\n        selectedImage={() => setSelectedImageMessage(true)}\n      />\n      {selectedImageMessage && (\n        <p className='image-message'>Your character has been chosen</p>\n      )}\n      <div className='button-container'>\n        <button onClick={navigateToHomepage} className='character-button'>\n          Back\n        </button>\n        <button onClick={navigateToLoginPage} className='character-button'>\n          Next\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}