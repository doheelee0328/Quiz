{"ast":null,"code":"import _slicedToArray from\"/Users/doheelee/Quiz/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{changeCharacter}from'../slices/character';import{gamingRoom,setHostName,setNickname}from'../slices/player';import'../scss/main.scss';import Button from'../components/Buttons';import{useNavigate}from'react-router-dom';import{socket}from'../socket/index';import{setPlayersInRoom}from'../slices/player';import{setSelectedCategory,setSelectedDifficulty}from'../slices/questions';// use redux to use the nickname and room\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var inputNicknameRef=useRef(null);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),playerName=_useState4[0],setPlayerName=_useState4[1];// const [roomName, setRoomName] = useState('')\nvar dispatch=useDispatch();// redux\nvar selectedCharacter=useSelector(function(state){return state.characterSlice.character;});var selectedRoom=useSelector(function(state){return state.playerSlice.gamingRoom;});var navigate=useNavigate();useEffect(function(){if(inputNicknameRef.current){inputNicknameRef.current.focus();}var storedCharacter=localStorage.getItem('character-image');if(storedCharacter){dispatch(changeCharacter(storedCharacter));}socket.on('update-players',function(players){dispatch(setPlayersInRoom(players));});return function(){socket.off('update-players');};},[dispatch,selectedCharacter]);var joinRoomHandler=function joinRoomHandler(){if(!selectedRoom||!playerName){setMessage('Please enter your nickname and the existing room to join the game');return;}socket.emit('join-room',selectedRoom,playerName,function(roomExist){if(roomExist){navigate('/lobby');dispatch(setNickname(playerName));}else{setMessage(\"The room \".concat(selectedRoom,\" does not exist\"));}});};var joinNewGameHandler=function joinNewGameHandler(){if(!playerName&&!selectedRoom){setMessage('Please enter your username and room to create a quiz');return;}else{dispatch(setNickname(playerName));// set the nickname to the player name\nsocket.emit('create-room',selectedRoom,playerName,function(room){// callback function that provides the name of the room\nif(typeof room==='string'){navigate('/game-room');dispatch(setSelectedCategory(''));dispatch(setSelectedDifficulty(''));dispatch(setHostName(playerName));// Dispatch setHostName after setting playerName\n}else{setMessage('The room already exists, please try again');}});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[selectedCharacter&&/*#__PURE__*/_jsx(\"img\",{src:selectedCharacter,alt:\"selected-character\",className:\"selected-character\",\"data-cy\":\"selected-character\"}),/*#__PURE__*/_jsx(\"p\",{className:\"nickname\",\"data-cy\":\"nickname\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:inputNicknameRef,className:\"input\",\"data-cy\":\"input\",onChange:function onChange(e){return setPlayerName(e.target.value);},value:playerName}),/*#__PURE__*/_jsx(\"p\",{className:\"nickname\",\"data-cy\":\"nickname\",children:\"Room\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",\"data-cy\":\"input\",onChange:function onChange(e){return dispatch(gamingRoom(e.target.value));},value:selectedRoom}),/*#__PURE__*/_jsxs(\"div\",{className:\"start-game-container\",children:[/*#__PURE__*/_jsx(Button,{title:\"Create Room\",onClick:joinNewGameHandler}),/*#__PURE__*/_jsx(Button,{title:\"Join Game\",onClick:joinRoomHandler,dataCy:\"join-button\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"not-entered-message\",children:message})]});};export default Login;","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","changeCharacter","gamingRoom","setHostName","setNickname","Button","useNavigate","socket","setPlayersInRoom","setSelectedCategory","setSelectedDifficulty","jsx","_jsx","jsxs","_jsxs","Login","inputNicknameRef","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","playerName","setPlayerName","dispatch","selectedCharacter","state","characterSlice","character","selectedRoom","playerSlice","navigate","current","focus","storedCharacter","localStorage","getItem","on","players","off","joinRoomHandler","emit","roomExist","concat","joinNewGameHandler","room","className","children","src","alt","type","ref","onChange","e","target","value","title","onClick","dataCy"],"sources":["/Users/doheelee/Quiz/client/src/pages/Login.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changeCharacter } from '../slices/character'\nimport { gamingRoom, setHostName, setNickname } from '../slices/player'\nimport '../scss/main.scss'\nimport Button from '../components/Buttons'\nimport { useNavigate } from 'react-router-dom'\nimport { socket } from '../socket/index'\nimport { setPlayersInRoom } from '../slices/player'\nimport { setSelectedCategory, setSelectedDifficulty } from '../slices/questions'\n\n// use redux to use the nickname and room\nconst Login = () => {\n  const inputNicknameRef = useRef<HTMLInputElement>(null)\n  const [message, setMessage] = useState<string>('')\n  const [playerName, setPlayerName] = useState('')\n\n  // const [roomName, setRoomName] = useState('')\n  const dispatch = useDispatch()\n  // redux\n  const selectedCharacter = useSelector(\n    (state: any) => state.characterSlice.character\n  )\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (inputNicknameRef.current) {\n      inputNicknameRef.current.focus()\n    }\n\n    const storedCharacter = localStorage.getItem('character-image')\n    if (storedCharacter) {\n      dispatch(changeCharacter(storedCharacter))\n    }\n\n    socket.on('update-players', (players: string[]) => {\n      dispatch(setPlayersInRoom(players))\n    })\n    return () => {\n      socket.off('update-players')\n    }\n  }, [dispatch, selectedCharacter])\n\n  const joinRoomHandler = () => {\n    if (!selectedRoom || !playerName) {\n      setMessage(\n        'Please enter your nickname and the existing room to join the game'\n      )\n      return\n    }\n\n    socket.emit('join-room', selectedRoom, playerName, (roomExist: boolean) => {\n      if (roomExist) {\n        navigate('/lobby')\n        dispatch(setNickname(playerName))\n      } else {\n        setMessage(`The room ${selectedRoom} does not exist`)\n      }\n    })\n  }\n  const joinNewGameHandler = () => {\n    if (!playerName && !selectedRoom) {\n      setMessage('Please enter your username and room to create a quiz')\n      return\n    } else {\n      dispatch(setNickname(playerName))\n      // set the nickname to the player name\n\n      socket.emit(\n        'create-room',\n        selectedRoom,\n        playerName,\n        (room: string | boolean) => {\n          // callback function that provides the name of the room\n          if (typeof room === 'string') {\n            navigate('/game-room')\n            dispatch(setSelectedCategory(''))\n            dispatch(setSelectedDifficulty(''))\n            dispatch(setHostName(playerName)) // Dispatch setHostName after setting playerName\n          } else {\n            setMessage('The room already exists, please try again')\n          }\n        }\n      )\n    }\n  }\n\n  return (\n    <div className='login-container'>\n      {/* <Logo /> */}\n      {selectedCharacter && (\n        <img\n          src={selectedCharacter}\n          alt='selected-character'\n          className='selected-character'\n          data-cy='selected-character'\n        />\n      )}\n      <p className='nickname' data-cy='nickname'>\n        Username\n      </p>\n      <input\n        type='text'\n        ref={inputNicknameRef}\n        className='input'\n        data-cy='input'\n        onChange={(e) => setPlayerName(e.target.value)}\n        value={playerName}\n      />\n      <p className='nickname' data-cy='nickname'>\n        Room\n      </p>\n      <input\n        type='text'\n        className='input'\n        data-cy='input'\n        onChange={(e) => dispatch(gamingRoom(e.target.value))}\n        value={selectedRoom}\n      />\n\n      <div className='start-game-container'>\n        <Button title='Create Room' onClick={joinNewGameHandler} />\n        <Button\n          title='Join Game'\n          onClick={joinRoomHandler}\n          dataCy='join-button'\n        />\n      </div>\n\n      {message && <p className='not-entered-message'>{message}</p>}\n    </div>\n  )\n}\n\nexport default Login\n"],"mappings":"iHAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,eAAe,KAAQ,qBAAqB,CACrD,OAASC,UAAU,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACvE,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAC1C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,KAAQ,iBAAiB,CACxC,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,mBAAmB,CAAEC,qBAAqB,KAAQ,qBAAqB,CAEhF;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAA,CAAS,CAClB,GAAM,CAAAC,gBAAgB,CAAGpB,MAAM,CAAmB,IAAI,CAAC,CACvD,IAAAqB,SAAA,CAA8BnB,QAAQ,CAAS,EAAE,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAoCxB,QAAQ,CAAC,EAAE,CAAC,CAAAyB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC;AACA,GAAM,CAAAG,QAAQ,CAAG1B,WAAW,CAAC,CAAC,CAC9B;AACA,GAAM,CAAA2B,iBAAiB,CAAG5B,WAAW,CACnC,SAAC6B,KAAU,QAAK,CAAAA,KAAK,CAACC,cAAc,CAACC,SAAS,EAChD,CAAC,CACD,GAAM,CAAAC,YAAY,CAAGhC,WAAW,CAAC,SAAC6B,KAAU,QAAK,CAAAA,KAAK,CAACI,WAAW,CAAC9B,UAAU,GAAC,CAE9E,GAAM,CAAA+B,QAAQ,CAAG3B,WAAW,CAAC,CAAC,CAE9BT,SAAS,CAAC,UAAM,CACd,GAAImB,gBAAgB,CAACkB,OAAO,CAAE,CAC5BlB,gBAAgB,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC,CAClC,CAEA,GAAM,CAAAC,eAAe,CAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAC/D,GAAIF,eAAe,CAAE,CACnBV,QAAQ,CAACzB,eAAe,CAACmC,eAAe,CAAC,CAAC,CAC5C,CAEA7B,MAAM,CAACgC,EAAE,CAAC,gBAAgB,CAAE,SAACC,OAAiB,CAAK,CACjDd,QAAQ,CAAClB,gBAAgB,CAACgC,OAAO,CAAC,CAAC,CACrC,CAAC,CAAC,CACF,MAAO,WAAM,CACXjC,MAAM,CAACkC,GAAG,CAAC,gBAAgB,CAAC,CAC9B,CAAC,CACH,CAAC,CAAE,CAACf,QAAQ,CAAEC,iBAAiB,CAAC,CAAC,CAEjC,GAAM,CAAAe,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC5B,GAAI,CAACX,YAAY,EAAI,CAACP,UAAU,CAAE,CAChCH,UAAU,CACR,mEACF,CAAC,CACD,OACF,CAEAd,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEZ,YAAY,CAAEP,UAAU,CAAE,SAACoB,SAAkB,CAAK,CACzE,GAAIA,SAAS,CAAE,CACbX,QAAQ,CAAC,QAAQ,CAAC,CAClBP,QAAQ,CAACtB,WAAW,CAACoB,UAAU,CAAC,CAAC,CACnC,CAAC,IAAM,CACLH,UAAU,aAAAwB,MAAA,CAAad,YAAY,mBAAiB,CAAC,CACvD,CACF,CAAC,CAAC,CACJ,CAAC,CACD,GAAM,CAAAe,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/B,GAAI,CAACtB,UAAU,EAAI,CAACO,YAAY,CAAE,CAChCV,UAAU,CAAC,sDAAsD,CAAC,CAClE,OACF,CAAC,IAAM,CACLK,QAAQ,CAACtB,WAAW,CAACoB,UAAU,CAAC,CAAC,CACjC;AAEAjB,MAAM,CAACoC,IAAI,CACT,aAAa,CACbZ,YAAY,CACZP,UAAU,CACV,SAACuB,IAAsB,CAAK,CAC1B;AACA,GAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAE,CAC5Bd,QAAQ,CAAC,YAAY,CAAC,CACtBP,QAAQ,CAACjB,mBAAmB,CAAC,EAAE,CAAC,CAAC,CACjCiB,QAAQ,CAAChB,qBAAqB,CAAC,EAAE,CAAC,CAAC,CACnCgB,QAAQ,CAACvB,WAAW,CAACqB,UAAU,CAAC,CAAC,CAAC;AACpC,CAAC,IAAM,CACLH,UAAU,CAAC,2CAA2C,CAAC,CACzD,CACF,CACF,CAAC,CACH,CACF,CAAC,CAED,mBACEP,KAAA,QAAKkC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAE7BtB,iBAAiB,eAChBf,IAAA,QACEsC,GAAG,CAAEvB,iBAAkB,CACvBwB,GAAG,CAAC,oBAAoB,CACxBH,SAAS,CAAC,oBAAoB,CAC9B,UAAQ,oBAAoB,CAC7B,CACF,cACDpC,IAAA,MAAGoC,SAAS,CAAC,UAAU,CAAC,UAAQ,UAAU,CAAAC,QAAA,CAAC,UAE3C,CAAG,CAAC,cACJrC,IAAA,UACEwC,IAAI,CAAC,MAAM,CACXC,GAAG,CAAErC,gBAAiB,CACtBgC,SAAS,CAAC,OAAO,CACjB,UAAQ,OAAO,CACfM,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA9B,aAAa,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,CAC/CA,KAAK,CAAEjC,UAAW,CACnB,CAAC,cACFZ,IAAA,MAAGoC,SAAS,CAAC,UAAU,CAAC,UAAQ,UAAU,CAAAC,QAAA,CAAC,MAE3C,CAAG,CAAC,cACJrC,IAAA,UACEwC,IAAI,CAAC,MAAM,CACXJ,SAAS,CAAC,OAAO,CACjB,UAAQ,OAAO,CACfM,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA7B,QAAQ,CAACxB,UAAU,CAACqD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,EAAC,CACtDA,KAAK,CAAE1B,YAAa,CACrB,CAAC,cAEFjB,KAAA,QAAKkC,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCrC,IAAA,CAACP,MAAM,EAACqD,KAAK,CAAC,aAAa,CAACC,OAAO,CAAEb,kBAAmB,CAAE,CAAC,cAC3DlC,IAAA,CAACP,MAAM,EACLqD,KAAK,CAAC,WAAW,CACjBC,OAAO,CAAEjB,eAAgB,CACzBkB,MAAM,CAAC,aAAa,CACrB,CAAC,EACC,CAAC,CAELxC,OAAO,eAAIR,IAAA,MAAGoC,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAE7B,OAAO,CAAI,CAAC,EACzD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}