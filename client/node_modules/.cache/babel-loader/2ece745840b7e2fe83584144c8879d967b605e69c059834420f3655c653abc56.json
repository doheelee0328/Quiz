{"ast":null,"code":"import _toConsumableArray from\"/Users/doheelee/Quiz/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/doheelee/Quiz/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/doheelee/Quiz/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/doheelee/Quiz/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{setScore}from'../slices/questions';import Button from'../components/Buttons';import{useNavigate}from'react-router-dom';import'../scss/main.scss';import Spinner from'../components/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Questions=function Questions(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectOption=_useState6[0],setSelectOption=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),currentQuestionIndex=_useState8[0],setCurrentQuestionIndex=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),shuffledOptions=_useState10[0],setShuffledOptions=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),message=_useState12[0],setMessage=_useState12[1];var _useState13=useState(20),_useState14=_slicedToArray(_useState13,2),timer=_useState14[0],setTimer=_useState14[1];var selectedCategory=useSelector(function(state){return state.questionSlice.selectedCategory;});var difficulty=useSelector(function(state){return state.questionSlice.selectedDifficulty;});var score=useSelector(function(state){return state.questionSlice.score;});var navigate=useNavigate();var dispatch=useDispatch();var fetchQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var retryCount,response,retryAfter,delay,data,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:retryCount=_args.length>0&&_args[0]!==undefined?_args[0]:3;_context.prev=1;_context.next=4;return fetch(\"https://opentdb.com/api.php?amount=5&category=\".concat(selectedCategory.id,\"&difficulty=\").concat(difficulty,\"&type=multiple\"));case 4:response=_context.sent;if(!(response.status===429)){_context.next=10;break;}retryAfter=response.headers.get('Retry-After');delay=retryAfter?parseInt(retryAfter)*1000:1000;// Default to 1 second delay if no Retry-After header provided\nif(retryCount>0){setTimeout(function(){fetchQuestions(retryCount-1);},delay);}else{// Handle error or display a message\nconsole.error('API rate limit exceeded');// Optionally, set loading state to false to stop continuous loading\nsetLoading(false);}return _context.abrupt(\"return\");case 10:_context.next=12;return response.json();case 12:data=_context.sent;setQuestions(data.results);setLoading(false);_context.next=21;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](1);console.error(_context.t0);if(retryCount>0){setTimeout(function(){fetchQuestions(retryCount-1);},1000);// Retry after 1 second\n}else{// Handle error or display a message\nconsole.error('Error fetching data');// Optionally, set loading state to false to stop continuous loading\nsetLoading(false);}case 21:case\"end\":return _context.stop();}},_callee,null,[[1,17]]);}));return function fetchQuestions(){return _ref.apply(this,arguments);};}();useEffect(function(){if(questions.length>0){var shuffled=shuffleQuestions(questions[currentQuestionIndex].correct_answer,questions[currentQuestionIndex].incorrect_answers);setShuffledOptions(shuffled);setTimer(20);}},[questions,currentQuestionIndex]);var shuffleQuestions=function shuffleQuestions(correctAnswer,incorrectAnswer){var options=[].concat(_toConsumableArray(incorrectAnswer),[correctAnswer]);return options.sort(function(){return Math.random()-0.5;});};var handleSelectOption=function handleSelectOption(option,correctAnswer){setSelectOption(option);if(option===correctAnswer){dispatch(setScore(score+1));}};var handleNextQuestion=function handleNextQuestion(){if(!selectOption){setMessage('Please select an answer');return;}else if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);setSelectOption('');setMessage('');setTimer(20);}};var handleCompletedPage=function handleCompletedPage(){if(!selectOption){setMessage('Please select an answer');return;}navigate('/completed');setMessage('');};useEffect(function(){var timerId=setInterval(function(){setTimer(function(prevTime){if(prevTime===0){clearInterval(timerId);if(currentQuestionIndex===questions.length-1){navigate('/completed');}else{setCurrentQuestionIndex(currentQuestionIndex+1);setMessage('');return 20;// Reset the timer to 20 when moving to the next question\n}}return prevTime-1;});},1000);// Clean up interval on component unmount\nreturn function(){return clearInterval(timerId);};},[currentQuestionIndex,questions]);useEffect(function(){fetchQuestions();},[]);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",children:/*#__PURE__*/_jsx(Spinner,{})}):questions&&questions.length>0&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"questions-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"timer-container\",children:[\"Time left \",/*#__PURE__*/_jsx(\"span\",{className:\"timer\",children:timer})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-answer-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"questions\",children:questions[currentQuestionIndex].question}),/*#__PURE__*/_jsx(\"div\",{className:\"questions-answers\",children:shuffledOptions.map(function(option,index){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Button,{title:option,onClick:function onClick(){return handleSelectOption(option,questions[currentQuestionIndex].correct_answer);},active:selectOption===option},index)});})}),currentQuestionIndex===questions.length-1?/*#__PURE__*/_jsx(Button,{title:\"Submit Quiz\",onClick:handleCompletedPage}):/*#__PURE__*/_jsx(Button,{title:\"Next Question\",onClick:handleNextQuestion})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-container\",children:[selectOption?/*#__PURE__*/_jsx(\"p\",{className:\"selected-option\",children:\"You have selected \".concat(selectOption)}):message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-selected-message\",children:message}),/*#__PURE__*/_jsx(\"p\",{className:\"out-of-questions\",children:\"\".concat(currentQuestionIndex+1,\"/5 questions\")})]})]})})});};export default Questions;","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","setScore","Button","useNavigate","Spinner","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Questions","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","loading","setLoading","_useState5","_useState6","selectOption","setSelectOption","_useState7","_useState8","currentQuestionIndex","setCurrentQuestionIndex","_useState9","_useState10","shuffledOptions","setShuffledOptions","_useState11","_useState12","message","setMessage","_useState13","_useState14","timer","setTimer","selectedCategory","state","questionSlice","difficulty","selectedDifficulty","score","navigate","dispatch","fetchQuestions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","retryCount","response","retryAfter","delay","data","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","fetch","concat","id","sent","status","headers","get","parseInt","setTimeout","console","error","abrupt","json","results","t0","stop","apply","shuffled","shuffleQuestions","correct_answer","incorrect_answers","correctAnswer","incorrectAnswer","options","_toConsumableArray","sort","Math","random","handleSelectOption","option","handleNextQuestion","handleCompletedPage","timerId","setInterval","prevTime","clearInterval","children","className","question","map","index","title","onClick","active"],"sources":["/Users/doheelee/Quiz/client/src/pages/Questions.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setScore } from '../slices/questions'\nimport Button from '../components/Buttons'\nimport { useNavigate } from 'react-router-dom'\nimport '../scss/main.scss'\nimport Spinner from '../components/Spinner'\n\nconst Questions = () => {\n  const [questions, setQuestions] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectOption, setSelectOption] = useState('')\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [shuffledOptions, setShuffledOptions] = useState<string[]>([])\n  const [message, setMessage] = useState('')\n  const [timer, setTimer] = useState(20)\n\n  const selectedCategory = useSelector(\n    (state: any) => state.questionSlice.selectedCategory\n  )\n  const difficulty = useSelector(\n    (state: any) => state.questionSlice.selectedDifficulty\n  )\n  const score = useSelector((state: any) => state.questionSlice.score)\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const fetchQuestions = async (retryCount = 3) => {\n    try {\n      const response = await fetch(\n        `https://opentdb.com/api.php?amount=5&category=${selectedCategory.id}&difficulty=${difficulty}&type=multiple`\n      )\n\n      if (response.status === 429) {\n        const retryAfter = response.headers.get('Retry-After')\n        const delay = retryAfter ? parseInt(retryAfter) * 1000 : 1000 // Default to 1 second delay if no Retry-After header provided\n\n        if (retryCount > 0) {\n          setTimeout(() => {\n            fetchQuestions(retryCount - 1)\n          }, delay)\n        } else {\n          // Handle error or display a message\n          console.error('API rate limit exceeded')\n          // Optionally, set loading state to false to stop continuous loading\n          setLoading(false)\n        }\n\n        return\n      }\n\n      const data = await response.json()\n      setQuestions(data.results)\n      setLoading(false)\n    } catch (error) {\n      console.error(error)\n      if (retryCount > 0) {\n        setTimeout(() => {\n          fetchQuestions(retryCount - 1)\n        }, 1000) // Retry after 1 second\n      } else {\n        // Handle error or display a message\n        console.error('Error fetching data')\n        // Optionally, set loading state to false to stop continuous loading\n        setLoading(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (questions.length > 0) {\n      const shuffled = shuffleQuestions(\n        questions[currentQuestionIndex].correct_answer,\n        questions[currentQuestionIndex].incorrect_answers\n      )\n      setShuffledOptions(shuffled)\n      setTimer(20)\n    }\n  }, [questions, currentQuestionIndex])\n\n  const shuffleQuestions = (\n    correctAnswer: string,\n    incorrectAnswer: string[]\n  ) => {\n    const options = [...incorrectAnswer, correctAnswer]\n    return options.sort(() => Math.random() - 0.5)\n  }\n\n  const handleSelectOption = (option: string, correctAnswer: string) => {\n    setSelectOption(option)\n    if (option === correctAnswer) {\n      dispatch(setScore(score + 1))\n    }\n  }\n\n  const handleNextQuestion = () => {\n    if (!selectOption) {\n      setMessage('Please select an answer')\n      return\n    } else if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1)\n      setSelectOption('')\n      setMessage('')\n      setTimer(20)\n    }\n  }\n\n  const handleCompletedPage = () => {\n    if (!selectOption) {\n      setMessage('Please select an answer')\n      return\n    }\n    navigate('/completed')\n    setMessage('')\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setTimer((prevTime) => {\n        if (prevTime === 0) {\n          clearInterval(timerId)\n          if (currentQuestionIndex === questions.length - 1) {\n            navigate('/completed')\n          } else {\n            setCurrentQuestionIndex(currentQuestionIndex + 1)\n            setMessage('')\n            return 20 // Reset the timer to 20 when moving to the next question\n          }\n        }\n        return prevTime - 1\n      })\n    }, 1000)\n\n    // Clean up interval on component unmount\n    return () => clearInterval(timerId)\n  }, [currentQuestionIndex, questions])\n\n  useEffect(() => {\n    fetchQuestions()\n  }, [])\n\n  return (\n    <div>\n      {loading ? (\n        <div className='spinner'>\n          <Spinner />\n        </div>\n      ) : (\n        questions &&\n        questions.length > 0 && (\n          <div>\n            <div className='questions-container'>\n              <p className='timer-container'>\n                Time left <span className='timer'>{timer}</span>\n              </p>\n\n              <div className='question-answer-container'>\n                <p className='questions'>\n                  {questions[currentQuestionIndex].question}\n                </p>\n                <div className='questions-answers'>\n                  {shuffledOptions.map((option, index) => (\n                    <>\n                      <Button\n                        key={index}\n                        title={option}\n                        onClick={() =>\n                          handleSelectOption(\n                            option,\n                            questions[currentQuestionIndex].correct_answer\n                          )\n                        }\n                        active={selectOption === option}\n                      />\n                    </>\n                  ))}\n                </div>\n                {currentQuestionIndex === questions.length - 1 ? (\n                  <Button title='Submit Quiz' onClick={handleCompletedPage} />\n                ) : (\n                  <Button title='Next Question' onClick={handleNextQuestion} />\n                )}\n              </div>\n              <div className='bottom-container'>\n                {selectOption ? (\n                  <p className='selected-option'>{`You have selected ${selectOption}`}</p>\n                ) : (\n                  message && <p className='error-selected-message'>{message}</p>\n                )}\n\n                <p className='out-of-questions'>{`${\n                  currentQuestionIndex + 1\n                }/5 questions`}</p>\n              </div>\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  )\n}\n\nexport default Questions\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}