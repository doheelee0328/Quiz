{"ast":null,"code":"import React,{Suspense}from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App.tsx';import reportWebVitals from'./reportWebVitals';import{HashRouter}from'react-router-dom';import{Provider}from'react-redux';import{store}from'./slices/index.tsx';import{jsx as _jsx}from\"react/jsx-runtime\";var root=ReactDOM.createRoot(document.getElementById('root'));console.log(store.getState());function Loading(){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading.....\"});}// since lazy loading asynchronous its a good practice to use suspense\n// to show that the page is loading.\n// wrap the suspense the app to handle the lazy load splitting in the entire application\nroot.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsx(Suspense,{fallback:Loading,children:/*#__PURE__*/_jsx(App,{})})})})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","Suspense","ReactDOM","App","reportWebVitals","HashRouter","Provider","store","jsx","_jsx","root","createRoot","document","getElementById","console","log","getState","Loading","children","render","StrictMode","fallback"],"sources":["/Users/doheelee/Quiz/client/src/index.js"],"sourcesContent":["import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './slices/index.tsx'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nconsole.log(store.getState())\n\nfunction Loading() {\n  return <div>Loading.....</div>\n}\n// since lazy loading asynchronous its a good practice to use suspense\n// to show that the page is loading.\n\n// wrap the suspense the app to handle the lazy load splitting in the entire application\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Suspense fallback={Loading}>\n          <App />\n        </Suspense>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,WAAW,CAC3B,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,KAAK,KAAQ,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,yBAE1C,GAAM,CAAAC,IAAI,CAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjEC,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,CAE7B,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,mBAAOR,IAAA,QAAAS,QAAA,CAAK,cAAY,CAAK,CAAC,CAChC,CACA;AACA;AAEA;AAEAR,IAAI,CAACS,MAAM,cACTV,IAAA,CAACT,KAAK,CAACoB,UAAU,EAAAF,QAAA,cACfT,IAAA,CAACH,QAAQ,EAACC,KAAK,CAAEA,KAAM,CAAAW,QAAA,cACrBT,IAAA,CAACJ,UAAU,EAAAa,QAAA,cACTT,IAAA,CAACR,QAAQ,EAACoB,QAAQ,CAAEJ,OAAQ,CAAAC,QAAA,cAC1BT,IAAA,CAACN,GAAG,GAAE,CAAC,CACC,CAAC,CACD,CAAC,CACL,CAAC,CACK,CACpB,CAAC,CAED;AACA;AACA;AACAC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}