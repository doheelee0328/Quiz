{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { useDispatch } from 'react-redux';\nimport { nickname } from '../../slices/player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const selectedNickname = useSelector(state => state.playerSlice.nickname);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('update-nicknames', updatedNicknames => {\n      dispatch(nickname(updatedNicknames));\n      console.log(updatedNicknames.map(nickname => nickname));\n    });\n    socket.on('receive-message', newMessages => {\n      setMessages(newMessages);\n    });\n  }, [dispatch, selectedRoom]);\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message');\n      return;\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom);\n    }\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [selectedNickname.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '4rem'\n          },\n          children: selectedNickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Send Message\",\n      onClick: submitMessageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"nXRiIc/wjpeKF4fwrA0idGbLhIM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","useDispatch","nickname","jsxDEV","_jsxDEV","Lobby","_s","message","setMessage","messages","setMessages","selectedNickname","state","playerSlice","selectedRoom","gamingRoom","dispatch","on","updatedNicknames","console","log","map","newMessages","submitMessageHandler","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","length","fontSize","color","onChange","e","target","value","title","onClick","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\nimport { useDispatch } from 'react-redux'\nimport { nickname } from '../../slices/player'\n\nconst Lobby = () => {\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState<string[]>([])\n\n  const selectedNickname = useSelector(\n    (state: any) => state.playerSlice.nickname\n  )\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    socket.on('update-nicknames', (updatedNicknames: string[]) => {\n      dispatch(nickname(updatedNicknames))\n      console.log(updatedNicknames.map((nickname) => nickname))\n    })\n    socket.on('receive-message', (newMessages: string[]) => {\n      setMessages(newMessages)\n    })\n  }, [dispatch, selectedRoom])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      setMessage('Please enter your message')\n      return\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom)\n    }\n    setMessage('')\n  }\n\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <div className='lobby-container'>\n        <div style={{ display: 'flex' }}>\n          {selectedNickname.length > 0 && (\n            <p style={{ fontSize: '4rem' }}>{selectedNickname}</p>\n          )}\n          <p style={{ color: 'white' }}>{message}</p>\n        </div>\n      </div>\n      <input onChange={(e) => setMessage(e.target.value)} value={message} />\n      <Button title='Send Message' onClick={submitMessageHandler} />\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EAEtD,MAAMe,gBAAgB,GAAGZ,WAAW,CACjCa,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACX,QACpC,CAAC;EACD,MAAMY,YAAY,GAAGf,WAAW,CAAEa,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACE,UAAU,CAAC;EAC9E,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACdG,MAAM,CAACiB,EAAE,CAAC,kBAAkB,EAAGC,gBAA0B,IAAK;MAC5DF,QAAQ,CAACd,QAAQ,CAACgB,gBAAgB,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAACG,GAAG,CAAEnB,QAAQ,IAAKA,QAAQ,CAAC,CAAC;IAC3D,CAAC,CAAC;IACFF,MAAM,CAACiB,EAAE,CAAC,iBAAiB,EAAGK,WAAqB,IAAK;MACtDZ,WAAW,CAACY,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,QAAQ,EAAEF,YAAY,CAAC,CAAC;EAE5B,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAChB,OAAO,EAAE;MACZC,UAAU,CAAC,2BAA2B,CAAC;MACvC;IACF,CAAC,MAAM;MACL;MACAR,MAAM,CAACwB,IAAI,CAAC,cAAc,EAAEjB,OAAO,EAAEO,YAAY,CAAC;IACpD;IACAN,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAL,QAAA,eAC9BrB,OAAA;QAAK2B,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAP,QAAA,GAC7Bd,gBAAgB,CAACsB,MAAM,GAAG,CAAC,iBAC1B7B,OAAA;UAAG2B,KAAK,EAAE;YAAEG,QAAQ,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAEd;QAAgB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACtD,eACDzB,OAAA;UAAG2B,KAAK,EAAE;YAAEI,KAAK,EAAE;UAAQ,CAAE;UAAAV,QAAA,EAAElB;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA;MAAOgC,QAAQ,EAAGC,CAAC,IAAK7B,UAAU,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEhC;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEzB,OAAA,CAACN,MAAM;MAAC0C,KAAK,EAAC,cAAc;MAACC,OAAO,EAAElB;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAAvB,EAAA,CA9CKD,KAAK;EAAA,QAIgBN,WAAW,EAGfA,WAAW,EACfE,WAAW;AAAA;AAAAyC,EAAA,GARxBrC,KAAK;AAgDX,eAAeA,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}