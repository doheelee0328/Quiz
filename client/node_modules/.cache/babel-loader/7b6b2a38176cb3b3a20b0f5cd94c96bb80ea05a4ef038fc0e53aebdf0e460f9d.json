{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../components/Buttons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../socket/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const [message, setMessage] = useState([]);\n  // const [messages, setMessages] = useState<string[]>([])\n\n  const selectedNickname = useSelector(state => state.playerSlice.nickname);\n  const selectedRoom = useSelector(state => state.playerSlice.gamingRoom);\n  useEffect(() => {\n    socket.on('receive-message', newMessage => {\n      // Update messages state properly by either spreading the existing messages array\n      // or concatenating the new message with existing ones.\n      setMessage(prevMessages => [...prevMessages, newMessage]);\n      console.log('New message received:', newMessage); // Check if the new message is received correctly\n    });\n  }, []);\n  const submitMessageHandler = () => {\n    if (!message) {\n      // setMessage('Please enter your message')\n      console.log([]);\n      return;\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom);\n    }\n    // setMessage('')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '4rem'\n        },\n        children: [selectedNickname && selectedNickname, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Send Message\",\n      onClick: submitMessageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"QyVI6GqHC10Cky/P2dtScojpubA=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","Button","useSelector","socket","jsxDEV","_jsxDEV","Lobby","_s","message","setMessage","selectedNickname","state","playerSlice","nickname","selectedRoom","gamingRoom","on","newMessage","prevMessages","console","log","submitMessageHandler","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontSize","onChange","e","target","value","title","onClick","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/pages/lobby/Lobby.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Buttons'\nimport { useSelector } from 'react-redux'\nimport { socket } from '../../socket/index'\n\nconst Lobby = () => {\n  const [message, setMessage] = useState<string[]>([])\n  // const [messages, setMessages] = useState<string[]>([])\n\n  const selectedNickname = useSelector(\n    (state: any) => state.playerSlice.nickname\n  )\n  const selectedRoom = useSelector((state: any) => state.playerSlice.gamingRoom)\n  useEffect(() => {\n    socket.on('receive-message', (newMessage: string) => {\n      // Update messages state properly by either spreading the existing messages array\n      // or concatenating the new message with existing ones.\n      setMessage((prevMessages) => [...prevMessages, newMessage])\n      console.log('New message received:', newMessage) // Check if the new message is received correctly\n    })\n  }, [])\n\n  const submitMessageHandler = () => {\n    if (!message) {\n      // setMessage('Please enter your message')\n      console.log([])\n      return\n    } else {\n      // Emitting the message along with the room information\n      socket.emit('send-message', message, selectedRoom)\n    }\n    // setMessage('')\n  }\n\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <div className='lobby-container'>\n        <p style={{ fontSize: '4rem' }}>\n          {selectedNickname && selectedNickname}:\n        </p>\n        {message}\n      </div>\n      <input onChange={(e) => setMessage(e.target.value)} value={message} />\n      <Button title='Send Message' onClick={submitMessageHandler} />\n    </div>\n  )\n}\n\nexport default Lobby\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACpD;;EAEA,MAAMW,gBAAgB,GAAGR,WAAW,CACjCS,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACC,QACpC,CAAC;EACD,MAAMC,YAAY,GAAGZ,WAAW,CAAES,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACG,UAAU,CAAC;EAC9Ef,SAAS,CAAC,MAAM;IACdG,MAAM,CAACa,EAAE,CAAC,iBAAiB,EAAGC,UAAkB,IAAK;MACnD;MACA;MACAR,UAAU,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;MAC3DE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,UAAU,CAAC,EAAC;IACnD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACb,OAAO,EAAE;MACZ;MACAW,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;MACf;IACF,CAAC,MAAM;MACL;MACAjB,MAAM,CAACmB,IAAI,CAAC,cAAc,EAAEd,OAAO,EAAEM,YAAY,CAAC;IACpD;IACA;EACF,CAAC;;EAED,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdtB,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9BlB,OAAA;QAAGwB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAP,QAAA,GAC5Bb,gBAAgB,IAAIA,gBAAgB,EAAC,GACxC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACHnB,OAAO;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNtB,OAAA;MAAO0B,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAE1B;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEtB,OAAA,CAACJ,MAAM;MAACkC,KAAK,EAAC,cAAc;MAACC,OAAO,EAAEf;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAApB,EAAA,CA1CKD,KAAK;EAAA,QAIgBJ,WAAW,EAGfA,WAAW;AAAA;AAAAmC,EAAA,GAP5B/B,KAAK;AA4CX,eAAeA,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}