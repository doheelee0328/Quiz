{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/smart-duck/client/src/index.js\";\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter, Sups } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './slices/index.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconsole.log(store.getState());\nfunction Loading() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading.....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n// since lazy loading asynchronous its a good practice to use suspense\n// to show that the page is loading.\n_c = Loading;\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: Loading,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","Suspense","ReactDOM","App","reportWebVitals","HashRouter","Sups","Provider","store","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","console","log","getState","Loading","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","StrictMode","fallback","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/smart-duck/client/src/index.js"],"sourcesContent":["import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter, Sups } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './slices/index.tsx'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nconsole.log(store.getState())\n\nfunction Loading() {\n  return <div>Loading.....</div>\n}\n// since lazy loading asynchronous its a good practice to use suspense\n// to show that the page is loading.\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Suspense fallback={Loading}>\n          <App />\n        </Suspense>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACnD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEC,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC;AAE7B,SAASC,OAAOA,CAAA,EAAG;EACjB,oBAAOR,OAAA;IAAAS,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChC;AACA;AACA;AAAAC,EAAA,GAJSN,OAAO;AAMhBP,IAAI,CAACc,MAAM,eACTf,OAAA,CAACV,KAAK,CAAC0B,UAAU;EAAAP,QAAA,eACfT,OAAA,CAACH,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAW,QAAA,eACrBT,OAAA,CAACL,UAAU;MAAAc,QAAA,eACTT,OAAA,CAACT,QAAQ;QAAC0B,QAAQ,EAAET,OAAQ;QAAAC,QAAA,eAC1BT,OAAA,CAACP,GAAG;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED;AACA;AACA;AACAnB,eAAe,CAAC,CAAC;AAAA,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}