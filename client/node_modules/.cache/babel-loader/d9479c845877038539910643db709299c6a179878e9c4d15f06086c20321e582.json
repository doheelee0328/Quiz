{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/personal-projects/smart-duck-original/client/src/pages/gameRoom/GameRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../../components/Buttons';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedCategory, setSelectedDifficulty } from '../../slices/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameSetup = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  // const [selectedCategory, setSelectedCategory] = useState('')\n  // const [questions, setQuestions] = useState([])\n  // const [difficulty, setDifficulty] = useState('')\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('https://opentdb.com/api_category.php');\n      const data = await response.json();\n      setCategories(data.trivia_categories);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const playButtonHandler = () => {\n    navigate('/lobby');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Let's set up a game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick a difficulty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Easy\",\n      onClick: () => dispatch(setSelectedDifficulty('easy'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Medium\",\n      onClick: () => dispatch(setSelectedDifficulty('medium'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Hard\",\n      onClick: () => dispatch(setSelectedDifficulty('hard'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick a Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(Button, {\n      title: category.name,\n      onClick: () => dispatch(setSelectedCategory({\n        id: category.id,\n        name: category.name\n      }))\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Play\",\n      onClick: playButtonHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(GameSetup, \"RoV/aL1U16sI8PM8V0wVlmL3Ilo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = GameSetup;\nexport default GameSetup;\nvar _c;\n$RefreshReg$(_c, \"GameSetup\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Button","useDispatch","setSelectedCategory","setSelectedDifficulty","jsxDEV","_jsxDEV","GameSetup","_s","categories","setCategories","navigate","dispatch","fetchCategories","response","fetch","data","json","trivia_categories","error","console","playButtonHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","map","category","name","id","_c","$RefreshReg$"],"sources":["/Users/doheelee/Desktop/personal-projects/smart-duck-original/client/src/pages/gameRoom/GameRoom.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../../components/Buttons'\nimport { useDispatch } from 'react-redux'\nimport {\n  setSelectedCategory,\n  setSelectedDifficulty,\n} from '../../slices/questions'\n\nconst GameSetup = () => {\n  const [categories, setCategories] = useState([])\n  // const [selectedCategory, setSelectedCategory] = useState('')\n  // const [questions, setQuestions] = useState([])\n  // const [difficulty, setDifficulty] = useState('')\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('https://opentdb.com/api_category.php')\n      const data = await response.json()\n\n      setCategories(data.trivia_categories)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const playButtonHandler = () => {\n    navigate('/lobby')\n  }\n\n  return (\n    <div>\n      <h1>Let's set up a game</h1>\n      <h1>Pick a difficulty</h1>\n      <Button\n        title='Easy'\n        onClick={() => dispatch(setSelectedDifficulty('easy'))}\n      />\n      <Button\n        title='Medium'\n        onClick={() => dispatch(setSelectedDifficulty('medium'))}\n      />\n      <Button\n        title='Hard'\n        onClick={() => dispatch(setSelectedDifficulty('hard'))}\n      />\n\n      <h1>Pick a Category</h1>\n      {categories.map((category: any) => (\n        <Button\n          title={category.name}\n          onClick={() =>\n            dispatch(\n              setSelectedCategory({ id: category.id, name: category.name })\n            )\n          }\n          key={category.id}\n        />\n      ))}\n\n      <Button title='Play' onClick={playButtonHandler} />\n    </div>\n  )\n}\n\nexport default GameSetup\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}