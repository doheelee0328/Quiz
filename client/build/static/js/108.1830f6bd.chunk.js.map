{"version":3,"file":"static/js/108.1830f6bd.chunk.js","mappings":"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","sources":["components/Buttons.tsx","components/Difficulty.tsx","components/Category.tsx","pages/GameRoom.tsx"],"sourcesContent":["import React from 'react'\nimport '../scss/main.scss'\n\ninterface ButtonProps {\n  title: string\n  onClick?: () => void\n  dataCy?: string\n  active?: boolean\n}\n\nconst Button = ({ title, onClick, dataCy, active }: ButtonProps) => {\n  return (\n    <button\n      className={`character-button ${active ? 'active' : ''}`}\n      onClick={onClick}\n      data-cy={dataCy}\n    >\n      {title}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from './Buttons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSelectedDifficulty } from '../slices/questions'\nimport '../scss/main.scss'\n\nconst Difficulty = () => {\n  const dispatch = useDispatch()\n\n  const difficulty = useSelector(\n    (state: any) => state.questionSlice.selectedDifficulty\n  )\n  return (\n    <>\n      <h2 className='pick-heading'>Pick a difficulty</h2>\n      <div className='choose-container'>\n        <Button\n          title='Easy'\n          onClick={() => dispatch(setSelectedDifficulty('easy'))}\n          active={difficulty === 'easy'}\n        />\n        <Button\n          title='Medium'\n          onClick={() => dispatch(setSelectedDifficulty('medium'))}\n          active={difficulty === 'medium'}\n        />\n        <Button\n          title='Hard'\n          onClick={() => dispatch(setSelectedDifficulty('hard'))}\n          active={difficulty === 'hard'}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Difficulty\n","import React from 'react'\nimport Button from './Buttons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSelectedCategory } from '../slices/questions'\nimport '../scss/main.scss'\n\ninterface Categories {\n  id: number\n  name: string\n}\n\nconst Category = ({ categories }: { categories: Array<Categories> }) => {\n  const dispatch = useDispatch()\n\n  const selectedCategory = useSelector(\n    (state: any) => state.questionSlice.selectedCategory\n  )\n  return (\n    <>\n      <h2 className='pick-heading'>Pick a Category</h2>\n      <div className='pick-container-category'>\n        {categories.map((category: Categories) => (\n          <Button\n            title={category.name}\n            onClick={() =>\n              dispatch(\n                setSelectedCategory({ id: category.id, name: category.name })\n              )\n            }\n            active={selectedCategory && selectedCategory.id === category.id}\n            key={category.id}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Category\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../components/Buttons'\nimport Difficulty from '../components/Difficulty'\nimport Category from '../components/Category'\n\nimport '../scss/main.scss'\n\nconst GameSetup = () => {\n  const [categories, setCategories] = useState([])\n\n  const navigate = useNavigate()\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('https://opentdb.com/api_category.php')\n      const data = await response.json()\n      console.log(data.trivia_categories)\n      setCategories(data.trivia_categories)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const playButtonHandler = () => {\n    navigate('/lobby')\n  }\n\n  return (\n    <div className='game-room-container'>\n      <h1 className='heading-setup-game'>Let's Play!</h1>\n      <div className='difficulty-container'>\n        <Difficulty />\n      </div>\n      <div className='category-container'>\n        <Category categories={categories} />\n      </div>\n      <div className='ready-to-play-container'>\n        <Button title='Ready To Play' onClick={playButtonHandler} />\n      </div>\n    </div>\n  )\n}\n\nexport default GameSetup\n"],"names":["_ref","title","onClick","dataCy","active","_jsx","className","concat","children","dispatch","useDispatch","difficulty","useSelector","state","questionSlice","selectedDifficulty","_jsxs","_Fragment","Button","setSelectedDifficulty","categories","selectedCategory","map","category","name","setSelectedCategory","id","_useState","useState","_useState2","_slicedToArray","setCategories","navigate","useNavigate","fetchCategories","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","console","log","trivia_categories","t0","error","stop","apply","arguments","useEffect","Difficulty","Category"],"sourceRoot":""}