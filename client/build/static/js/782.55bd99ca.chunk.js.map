{"version":3,"file":"static/js/782.55bd99ca.chunk.js","mappings":"0IAsBA,IAZe,SAAHA,GAAyD,IAAnDC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OACxC,OACEC,EAAAA,EAAAA,KAAA,UACEC,UAAS,oBAAAC,OAAsBH,EAAS,SAAW,IACnDF,QAASA,EACT,UAASC,EAAOK,SAEfP,GAGP,C,uJCGMQ,EAAkB,SAAHT,GAKE,IAJrBU,EAAKV,EAALU,MACAC,EAAGX,EAAHW,IACAC,EAAaZ,EAAbY,cACAT,EAAMH,EAANG,OAEMU,GAAWC,EAAAA,EAAAA,MAUjB,OACET,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBE,UAC9BH,EAAAA,EAAAA,KAAA,OACEU,IAAKL,EACLC,IAAKA,EACLL,UAAU,aACVJ,QAAS,WAdgB,IAACc,KAcYN,KAZxCG,GAASI,EAAAA,EAAAA,GAAgBD,IACzBE,aAAaC,QAAQ,kBAAmBH,GACxCJ,EAAc,kCAUgC,EAC5C,UAAST,KAIjB,EAmGA,EAjGkB,WAChB,IAAAiB,GAAwDC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArEI,EAAoBF,EAAA,GAAEG,EAAuBH,EAAA,GAE9CI,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,sBAAqBE,SAAA,EAElCH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAoB,UAAQ,oBAAmBE,SAAC,sBAG9DoB,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,gBAAeE,SAAA,EAC5BH,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,6qQACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,y/HACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,yoIACAC,IAAI,QACJC,cAAea,EACftB,OAAO,mBAGXyB,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,gBAAeE,SAAA,EAC5BH,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,q6HACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,68HACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,qoIACAC,IAAI,QACJC,cAAea,EACftB,OAAO,mBAGXyB,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,gBAAeE,SAAA,EAC5BH,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,6rIACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,q7HACAC,IAAI,QACJC,cAAea,EACftB,OAAO,gBAETE,EAAAA,EAAAA,KAACI,EAAe,CACdC,M,qyHACAC,IAAI,QACJC,cAAea,EACftB,OAAO,mBAGXE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BE,UACzCH,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACL5B,MAAM,OACNC,QA7EoB,WACG,mCAAzBsB,EACFE,EAAS,UAETD,EAAwB,+BAE5B,EAwEQtB,OAAO,kBAGVqB,IACCnB,EAAAA,EAAAA,KAAA,KACEC,UAAU,2BACV,UAAQ,2BAA0BE,SAEjCgB,MAKX,C","sources":["components/Buttons.tsx","pages/Character.tsx"],"sourcesContent":["import React from 'react'\nimport '../scss/main.scss'\n\ninterface ButtonProps {\n  title: string\n  onClick?: () => void\n  dataCy?: string\n  active?: boolean\n}\n\nconst Button = ({ title, onClick, dataCy, active }: ButtonProps) => {\n  return (\n    <button\n      className={`character-button ${active ? 'active' : ''}`}\n      onClick={onClick}\n      data-cy={dataCy}\n    >\n      {title}\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useState } from 'react'\nimport '../scss/main.scss'\nimport Duck1 from '../images/duck1.png'\nimport Duck2 from '../images/duck2.png'\nimport Duck3 from '../images/duck3.png'\nimport Duck4 from '../images/duck4.png'\nimport Duck5 from '../images/duck5.png'\nimport Duck6 from '../images/duck6.png'\nimport Duck7 from '../images/duck7.png'\nimport Duck8 from '../images/duck8.png'\nimport Duck9 from '../images/duck9.png'\nimport { useNavigate } from 'react-router-dom'\nimport { changeCharacter } from '../slices/character'\nimport { useDispatch } from 'react-redux'\nimport Button from '../components/Buttons'\n\ninterface CharacterProps {\n  image: any\n  alt: string\n  selectedImage: any\n  dataCy: string\n}\n\nconst CharacterImages = ({\n  image,\n  alt,\n  selectedImage,\n  dataCy,\n}: CharacterProps) => {\n  const dispatch = useDispatch()\n\n  const selectCharacterHandler = (selectedCharacter: any) => {\n    if (selectedCharacter) {\n      dispatch(changeCharacter(selectedCharacter))\n      localStorage.setItem('character-image', selectedCharacter)\n      selectedImage('Your character has been chosen')\n    }\n  }\n\n  return (\n    <div className='image-container'>\n      <img\n        src={image}\n        alt={alt}\n        className='duck-image'\n        onClick={() => selectCharacterHandler(image)}\n        data-cy={dataCy}\n      />\n    </div>\n  )\n}\n\nconst Character = () => {\n  const [selectedImageMessage, setSelectedImageMessage] = useState<string>('')\n\n  const navigate = useNavigate()\n  const navigateToLoginPage = () => {\n    if (selectedImageMessage === 'Your character has been chosen') {\n      navigate('/login')\n    } else {\n      setSelectedImageMessage('Please select your character')\n    }\n  }\n\n  return (\n    <div className='character-container'>\n      {/* <Logo /> */}\n      <h1 className='character-heading' data-cy='character-heading'>\n        Choose Your Duck\n      </h1>\n      <div className='row-character'>\n        <CharacterImages\n          image={Duck1}\n          alt='duck1'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck2}\n          alt='duck2'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck3}\n          alt='duck3'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n      </div>\n      <div className='row-character'>\n        <CharacterImages\n          image={Duck4}\n          alt='duck4'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck5}\n          alt='duck5'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck6}\n          alt='duck6'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n      </div>\n      <div className='row-character'>\n        <CharacterImages\n          image={Duck7}\n          alt='duck7'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck8}\n          alt='duck8'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n        <CharacterImages\n          image={Duck9}\n          alt='duck9'\n          selectedImage={setSelectedImageMessage}\n          dataCy='duck-image'\n        />\n      </div>\n      <div className='character-button-container'>\n        <Button\n          title='Next'\n          onClick={navigateToLoginPage}\n          dataCy='next-button'\n        />\n      </div>\n      {selectedImageMessage && (\n        <p\n          className='character-chosen-message'\n          data-cy='character-chosen-message'\n        >\n          {selectedImageMessage}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Character\n"],"names":["_ref","title","onClick","dataCy","active","_jsx","className","concat","children","CharacterImages","image","alt","selectedImage","dispatch","useDispatch","src","selectedCharacter","changeCharacter","localStorage","setItem","_useState","useState","_useState2","_slicedToArray","selectedImageMessage","setSelectedImageMessage","navigate","useNavigate","_jsxs","Button"],"sourceRoot":""}